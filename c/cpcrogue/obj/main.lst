                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.8 #9946 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module main
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _InitColors
                             13 	.globl _ShowLogo
                             14 	.globl _HandleKeyboard
                             15 	.globl _MapDraw
                             16 	.globl _MapIsBlocked
                             17 	.globl _MapCreate
                             18 	.globl _EntityPrintStats
                             19 	.globl _EntityDrawEntities
                             20 	.globl _GetBlockingEntity
                             21 	.globl _EntityAttack
                             22 	.globl _EntityMove
                             23 	.globl _EntityInit
                             24 	.globl _paper
                             25 	.globl _ink
                             26 	.globl _putchar
                             27 	.globl _cpct_scanKeyboard
                             28 	.globl _cpct_waitHalts
                             29 	.globl _edy
                             30 	.globl _target
                             31 	.globl _action
                             32 	.globl _new_y
                             33 	.globl _new_x
                             34 	.globl _edx
                             35 	.globl _dy
                             36 	.globl _dx
                             37 	.globl _state
                             38 	.globl _entities
                             39 	.globl _dirty
                             40 	.globl _enemy
                             41 	.globl _player
                             42 ;--------------------------------------------------------
                             43 ; special function registers
                             44 ;--------------------------------------------------------
                             45 ;--------------------------------------------------------
                             46 ; ram data
                             47 ;--------------------------------------------------------
                             48 	.area _DATA
   0000                      49 _player::
   0000                      50 	.ds 33
   0021                      51 _enemy::
   0021                      52 	.ds 33
   0042                      53 _dirty::
   0042                      54 	.ds 5
   0047                      55 _entities::
   0047                      56 	.ds 10
   0051                      57 _state::
   0051                      58 	.ds 1
   0052                      59 _dx::
   0052                      60 	.ds 1
   0053                      61 _dy::
   0053                      62 	.ds 1
   0054                      63 _edx::
   0054                      64 	.ds 10
   005E                      65 _new_x::
   005E                      66 	.ds 1
   005F                      67 _new_y::
   005F                      68 	.ds 1
                             69 ;--------------------------------------------------------
                             70 ; ram data
                             71 ;--------------------------------------------------------
                             72 	.area _INITIALIZED
   0000                      73 _action::
   0000                      74 	.ds 1
   0001                      75 _target::
   0001                      76 	.ds 2
   0003                      77 _edy::
   0003                      78 	.ds 1
                             79 ;--------------------------------------------------------
                             80 ; absolute external ram data
                             81 ;--------------------------------------------------------
                             82 	.area _DABS (ABS)
                             83 ;--------------------------------------------------------
                             84 ; global & static initialisations
                             85 ;--------------------------------------------------------
                             86 	.area _HOME
                             87 	.area _GSINIT
                             88 	.area _GSFINAL
                             89 	.area _GSINIT
                             90 ;--------------------------------------------------------
                             91 ; Home
                             92 ;--------------------------------------------------------
                             93 	.area _HOME
                             94 	.area _HOME
                             95 ;--------------------------------------------------------
                             96 ; code
                             97 ;--------------------------------------------------------
                             98 	.area _CODE
                             99 ;src/main.c:35: void InitColors()
                            100 ;	---------------------------------
                            101 ; Function InitColors
                            102 ; ---------------------------------
   0000                     103 _InitColors::
                            104 ;src/main.c:37: ink (0, 0,0);
   0000 21 00 00      [10]  105 	ld	hl, #0x0000
   0003 E5            [11]  106 	push	hl
   0004 AF            [ 4]  107 	xor	a, a
   0005 F5            [11]  108 	push	af
   0006 33            [ 6]  109 	inc	sp
   0007 CDr00r00      [17]  110 	call	_ink
                            111 ;src/main.c:38: ink (PEN_ENTITY, INK_ENTITY, INK_ENTITY);
   000A 33            [ 6]  112 	inc	sp
   000B 21 14 14      [10]  113 	ld	hl,#0x1414
   000E E3            [19]  114 	ex	(sp),hl
   000F 3E 01         [ 7]  115 	ld	a, #0x01
   0011 F5            [11]  116 	push	af
   0012 33            [ 6]  117 	inc	sp
   0013 CDr00r00      [17]  118 	call	_ink
                            119 ;src/main.c:39: ink (PEN_TILE, INK_LIGHT_TILE, INK_LIGHT_TILE);
   0016 33            [ 6]  120 	inc	sp
   0017 21 0D 0D      [10]  121 	ld	hl,#0x0d0d
   001A E3            [19]  122 	ex	(sp),hl
   001B 3E 02         [ 7]  123 	ld	a, #0x02
   001D F5            [11]  124 	push	af
   001E 33            [ 6]  125 	inc	sp
   001F CDr00r00      [17]  126 	call	_ink
                            127 ;src/main.c:40: ink (PEN_EXLORED, INK_DARK_TILE, INK_DARK_TILE);
   0022 33            [ 6]  128 	inc	sp
   0023 21 01 01      [10]  129 	ld	hl,#0x0101
   0026 E3            [19]  130 	ex	(sp),hl
   0027 3E 03         [ 7]  131 	ld	a, #0x03
   0029 F5            [11]  132 	push	af
   002A 33            [ 6]  133 	inc	sp
   002B CDr00r00      [17]  134 	call	_ink
                            135 ;src/conio.h:9: putchar (GS);
   002E 33            [ 6]  136 	inc	sp
   002F 21 1D 00      [10]  137 	ld	hl,#0x001d
   0032 E3            [19]  138 	ex	(sp),hl
   0033 CDr00r00      [17]  139 	call	_putchar
                            140 ;src/conio.h:10: putchar (color1); putchar (color1);
   0036 21 00 00      [10]  141 	ld	hl, #0x0000
   0039 E3            [19]  142 	ex	(sp),hl
   003A CDr00r00      [17]  143 	call	_putchar
   003D 21 00 00      [10]  144 	ld	hl, #0x0000
   0040 E3            [19]  145 	ex	(sp),hl
   0041 CDr00r00      [17]  146 	call	_putchar
   0044 F1            [10]  147 	pop	af
                            148 ;src/main.c:42: border (0); paper (0);
   0045 AF            [ 4]  149 	xor	a, a
   0046 F5            [11]  150 	push	af
   0047 33            [ 6]  151 	inc	sp
   0048 CDr00r00      [17]  152 	call	_paper
   004B 33            [ 6]  153 	inc	sp
   004C C9            [10]  154 	ret
                            155 ;src/main.c:62: void main()
                            156 ;	---------------------------------
                            157 ; Function main
                            158 ; ---------------------------------
   004D                     159 _main::
   004D DD E5         [15]  160 	push	ix
   004F DD 21 00 00   [14]  161 	ld	ix,#0
   0053 DD 39         [15]  162 	add	ix,sp
   0055 3B            [ 6]  163 	dec	sp
                            164 ;src/main.c:66: for (ei=0; ei!=5; ++ei) {
   0056 0E 00         [ 7]  165 	ld	c, #0x00
   0058                     166 00126$:
                            167 ;src/main.c:67: edx[ei]=1; edx[9-ei]=-1;
   0058 21r54r00      [10]  168 	ld	hl, #_edx
   005B 06 00         [ 7]  169 	ld	b, #0x00
   005D 09            [11]  170 	add	hl, bc
   005E 36 01         [10]  171 	ld	(hl), #0x01
   0060 3E 09         [ 7]  172 	ld	a, #0x09
   0062 91            [ 4]  173 	sub	a, c
   0063 5F            [ 4]  174 	ld	e, a
   0064 21r54r00      [10]  175 	ld	hl, #_edx
   0067 16 00         [ 7]  176 	ld	d, #0x00
   0069 19            [11]  177 	add	hl, de
   006A 36 FF         [10]  178 	ld	(hl), #0xff
                            179 ;src/main.c:66: for (ei=0; ei!=5; ++ei) {
   006C 0C            [ 4]  180 	inc	c
   006D 79            [ 4]  181 	ld	a, c
   006E D6 05         [ 7]  182 	sub	a, #0x05
   0070 20 E6         [12]  183 	jr	NZ,00126$
                            184 ;src/main.c:70: ShowLogo();
   0072 DD 71 FF      [19]  185 	ld	-1 (ix), c
   0075 CDr00r00      [17]  186 	call	_ShowLogo
                            187 ;src/conio.h:14: inline void cls () { putchar (FF); }
   0078 21 0C 00      [10]  188 	ld	hl, #0x000c
   007B E5            [11]  189 	push	hl
   007C CDr00r00      [17]  190 	call	_putchar
   007F F1            [10]  191 	pop	af
                            192 ;src/main.c:73: InitColors();
   0080 CDr00r00      [17]  193 	call	_InitColors
                            194 ;src/main.c:74: EntityInit (&player, 3, 3, SPR_PLAYER, PEN_ENTITY, "Thorbag", TRUE,
   0083 21 0E 0C      [10]  195 	ld	hl, #0x0c0e
   0086 E5            [11]  196 	push	hl
   0087 3E 11         [ 7]  197 	ld	a, #0x11
   0089 F5            [11]  198 	push	af
   008A 33            [ 6]  199 	inc	sp
   008B 21 14 00      [10]  200 	ld	hl, #0x0014
   008E E5            [11]  201 	push	hl
   008F 3E 01         [ 7]  202 	ld	a, #0x01
   0091 F5            [11]  203 	push	af
   0092 33            [ 6]  204 	inc	sp
   0093 21r8Ar02      [10]  205 	ld	hl, #___str_0
   0096 E5            [11]  206 	push	hl
   0097 21 40 01      [10]  207 	ld	hl, #0x0140
   009A E5            [11]  208 	push	hl
   009B 21 03 03      [10]  209 	ld	hl, #0x0303
   009E E5            [11]  210 	push	hl
   009F 21r00r00      [10]  211 	ld	hl, #_player
   00A2 E5            [11]  212 	push	hl
   00A3 CDr00r00      [17]  213 	call	_EntityInit
   00A6 21 0E 00      [10]  214 	ld	hl, #14
   00A9 39            [11]  215 	add	hl, sp
   00AA F9            [ 6]  216 	ld	sp, hl
                            217 ;src/main.c:76: EntityInit (&enemy, 19, 3, SPR_GOBLIN, PEN_ENTITY, "Goblin", TRUE,
   00AB 21 0D 0B      [10]  218 	ld	hl, #0x0b0d
   00AE E5            [11]  219 	push	hl
   00AF 3E 0C         [ 7]  220 	ld	a, #0x0c
   00B1 F5            [11]  221 	push	af
   00B2 33            [ 6]  222 	inc	sp
   00B3 21 0A 00      [10]  223 	ld	hl, #0x000a
   00B6 E5            [11]  224 	push	hl
   00B7 3E 01         [ 7]  225 	ld	a, #0x01
   00B9 F5            [11]  226 	push	af
   00BA 33            [ 6]  227 	inc	sp
   00BB 21r92r02      [10]  228 	ld	hl, #___str_1
   00BE E5            [11]  229 	push	hl
   00BF 21 67 01      [10]  230 	ld	hl, #0x0167
   00C2 E5            [11]  231 	push	hl
   00C3 21 13 03      [10]  232 	ld	hl, #0x0313
   00C6 E5            [11]  233 	push	hl
   00C7 21r21r00      [10]  234 	ld	hl, #_enemy
   00CA E5            [11]  235 	push	hl
   00CB CDr00r00      [17]  236 	call	_EntityInit
   00CE 21 0E 00      [10]  237 	ld	hl, #14
   00D1 39            [11]  238 	add	hl, sp
   00D2 F9            [ 6]  239 	ld	sp, hl
                            240 ;src/main.c:79: entities[0] = &player;
   00D3 21r00r00      [10]  241 	ld	hl, #_player
   00D6 22r47r00      [16]  242 	ld	(_entities), hl
                            243 ;src/main.c:80: entities[1] = &enemy;
   00D9 21r21r00      [10]  244 	ld	hl, #_enemy
   00DC 22r49r00      [16]  245 	ld	((_entities + 0x0002)), hl
                            246 ;src/main.c:82: dirty[0] = FALSE;
   00DF 21r42r00      [10]  247 	ld	hl, #_dirty
   00E2 36 00         [10]  248 	ld	(hl), #0x00
                            249 ;src/main.c:83: dirty[1] = FALSE;
   00E4 21r43r00      [10]  250 	ld	hl, #(_dirty + 0x0001)
   00E7 36 00         [10]  251 	ld	(hl), #0x00
                            252 ;src/main.c:85: MapCreate (MAP_WIDTH, MAP_HEIGHT);
   00E9 21 1C 14      [10]  253 	ld	hl, #0x141c
   00EC E5            [11]  254 	push	hl
   00ED CDr00r00      [17]  255 	call	_MapCreate
   00F0 F1            [10]  256 	pop	af
                            257 ;src/main.c:86: MapDraw ();
   00F1 CDr00r00      [17]  258 	call	_MapDraw
                            259 ;src/main.c:88: EntityPrintStats(&player);
   00F4 21r00r00      [10]  260 	ld	hl, #_player
   00F7 E5            [11]  261 	push	hl
   00F8 CDr00r00      [17]  262 	call	_EntityPrintStats
   00FB F1            [10]  263 	pop	af
                            264 ;src/main.c:91: state = PLAYER_TURN;
   00FC 21r51r00      [10]  265 	ld	hl,#_state + 0
   00FF 36 00         [10]  266 	ld	(hl), #0x00
                            267 ;src/main.c:92: do {
   0101                     268 00122$:
                            269 ;src/main.c:94: EntityDrawEntities(entities, dirty);
   0101 21r42r00      [10]  270 	ld	hl, #_dirty
   0104 E5            [11]  271 	push	hl
   0105 21r47r00      [10]  272 	ld	hl, #_entities
   0108 E5            [11]  273 	push	hl
   0109 CDr00r00      [17]  274 	call	_EntityDrawEntities
   010C F1            [10]  275 	pop	af
   010D F1            [10]  276 	pop	af
                            277 ;src/main.c:97: cpct_scanKeyboard();
   010E CDr00r00      [17]  278 	call	_cpct_scanKeyboard
                            279 ;src/main.c:100: dx=0; dy=0;
   0111 21r52r00      [10]  280 	ld	hl,#_dx + 0
   0114 36 00         [10]  281 	ld	(hl), #0x00
   0116 21r53r00      [10]  282 	ld	hl,#_dy + 0
   0119 36 00         [10]  283 	ld	(hl), #0x00
                            284 ;src/main.c:101: action = HandleKeyboard (&dx, &dy);
   011B 21r53r00      [10]  285 	ld	hl, #_dy
   011E E5            [11]  286 	push	hl
   011F 21r52r00      [10]  287 	ld	hl, #_dx
   0122 E5            [11]  288 	push	hl
   0123 CDr00r00      [17]  289 	call	_HandleKeyboard
   0126 F1            [10]  290 	pop	af
   0127 F1            [10]  291 	pop	af
   0128 FD 21r00r00   [14]  292 	ld	iy, #_action
   012C FD 75 00      [19]  293 	ld	0 (iy), l
                            294 ;src/main.c:103: new_x = player.x+dx;
   012F 3Ar00r00      [13]  295 	ld	a,(#_player + 0)
   0132 21r52r00      [10]  296 	ld	hl, #_dx
   0135 FD 21r5Er00   [14]  297 	ld	iy, #_new_x
   0139 86            [ 7]  298 	add	a, (hl)
   013A FD 77 00      [19]  299 	ld	0 (iy), a
                            300 ;src/main.c:104: new_y = player.y+dy;
   013D 3Ar01r00      [13]  301 	ld	a,(#_player + 1)
   0140 21r53r00      [10]  302 	ld	hl, #_dy
   0143 FD 21r5Fr00   [14]  303 	ld	iy, #_new_y
   0147 86            [ 7]  304 	add	a, (hl)
   0148 FD 77 00      [19]  305 	ld	0 (iy), a
                            306 ;src/main.c:105: if (action == PLAYER_MOVE && state == PLAYER_TURN) {
   014B 3Ar00r00      [13]  307 	ld	a,(#_action + 0)
   014E 3D            [ 4]  308 	dec	a
   014F 20 77         [12]  309 	jr	NZ,00109$
   0151 3Ar51r00      [13]  310 	ld	a,(#_state + 0)
   0154 B7            [ 4]  311 	or	a, a
   0155 20 71         [12]  312 	jr	NZ,00109$
                            313 ;src/main.c:106: if (!MapIsBlocked (new_x, new_y)) {
   0157 3Ar5Fr00      [13]  314 	ld	a, (_new_y)
   015A F5            [11]  315 	push	af
   015B 33            [ 6]  316 	inc	sp
   015C 3Ar5Er00      [13]  317 	ld	a, (_new_x)
   015F F5            [11]  318 	push	af
   0160 33            [ 6]  319 	inc	sp
   0161 CDr00r00      [17]  320 	call	_MapIsBlocked
   0164 F1            [10]  321 	pop	af
   0165 7D            [ 4]  322 	ld	a, l
   0166 B7            [ 4]  323 	or	a, a
   0167 20 5F         [12]  324 	jr	NZ,00109$
                            325 ;src/main.c:107: if (GetBlockingEntity (entities, &target, new_x, new_y) &&
   0169 3Ar5Fr00      [13]  326 	ld	a, (_new_y)
   016C F5            [11]  327 	push	af
   016D 33            [ 6]  328 	inc	sp
   016E 3Ar5Er00      [13]  329 	ld	a, (_new_x)
   0171 F5            [11]  330 	push	af
   0172 33            [ 6]  331 	inc	sp
   0173 21r01r00      [10]  332 	ld	hl, #_target
   0176 E5            [11]  333 	push	hl
   0177 21r47r00      [10]  334 	ld	hl, #_entities
   017A E5            [11]  335 	push	hl
   017B CDr00r00      [17]  336 	call	_GetBlockingEntity
   017E F1            [10]  337 	pop	af
   017F F1            [10]  338 	pop	af
   0180 F1            [10]  339 	pop	af
   0181 7D            [ 4]  340 	ld	a, l
   0182 B7            [ 4]  341 	or	a, a
   0183 28 21         [12]  342 	jr	Z,00103$
                            343 ;src/main.c:108: target != &player) {
   0185 FD 21r01r00   [14]  344 	ld	iy, #_target
   0189 FD 7E 00      [19]  345 	ld	a, 0 (iy)
   018C D6r00         [ 7]  346 	sub	a, #<(_player)
   018E 20 07         [12]  347 	jr	NZ,00187$
   0190 FD 7E 01      [19]  348 	ld	a, 1 (iy)
   0193 D6s00         [ 7]  349 	sub	a, #>(_player)
   0195 28 0F         [12]  350 	jr	Z,00103$
   0197                     351 00187$:
                            352 ;src/main.c:110: EntityAttack (&player, target);
   0197 2Ar01r00      [16]  353 	ld	hl, (_target)
   019A E5            [11]  354 	push	hl
   019B 21r00r00      [10]  355 	ld	hl, #_player
   019E E5            [11]  356 	push	hl
   019F CDr00r00      [17]  357 	call	_EntityAttack
   01A2 F1            [10]  358 	pop	af
   01A3 F1            [10]  359 	pop	af
   01A4 18 18         [12]  360 	jr	00104$
   01A6                     361 00103$:
                            362 ;src/main.c:113: dirty[0] = TRUE;
   01A6 21r42r00      [10]  363 	ld	hl, #_dirty
   01A9 36 01         [10]  364 	ld	(hl), #0x01
                            365 ;src/main.c:114: EntityMove (&player, dx, dy);
   01AB 3Ar53r00      [13]  366 	ld	a, (_dy)
   01AE F5            [11]  367 	push	af
   01AF 33            [ 6]  368 	inc	sp
   01B0 3Ar52r00      [13]  369 	ld	a, (_dx)
   01B3 F5            [11]  370 	push	af
   01B4 33            [ 6]  371 	inc	sp
   01B5 21r00r00      [10]  372 	ld	hl, #_player
   01B8 E5            [11]  373 	push	hl
   01B9 CDr00r00      [17]  374 	call	_EntityMove
   01BC F1            [10]  375 	pop	af
   01BD F1            [10]  376 	pop	af
   01BE                     377 00104$:
                            378 ;src/main.c:116: cpct_waitHalts(25);
   01BE 2E 19         [ 7]  379 	ld	l, #0x19
   01C0 CDr00r00      [17]  380 	call	_cpct_waitHalts
                            381 ;src/main.c:117: state = ENEMY_TURN;
   01C3 21r51r00      [10]  382 	ld	hl,#_state + 0
   01C6 36 01         [10]  383 	ld	(hl), #0x01
   01C8                     384 00109$:
                            385 ;src/main.c:120: if (state == ENEMY_TURN) {
   01C8 3Ar51r00      [13]  386 	ld	a,(#_state + 0)
   01CB 3D            [ 4]  387 	dec	a
   01CC C2r01r01      [10]  388 	jp	NZ,00122$
                            389 ;src/main.c:121: cpct_waitHalts(25);
   01CF 2E 19         [ 7]  390 	ld	l, #0x19
   01D1 CDr00r00      [17]  391 	call	_cpct_waitHalts
                            392 ;src/main.c:123: new_x = enemy.x + edx[ei];
   01D4 21r21r00      [10]  393 	ld	hl, #_enemy + 0
   01D7 46            [ 7]  394 	ld	b, (hl)
   01D8 3Er54         [ 7]  395 	ld	a, #<(_edx)
   01DA DD 86 FF      [19]  396 	add	a, -1 (ix)
   01DD 6F            [ 4]  397 	ld	l, a
   01DE 3Es00         [ 7]  398 	ld	a, #>(_edx)
   01E0 CE 00         [ 7]  399 	adc	a, #0x00
   01E2 67            [ 4]  400 	ld	h, a
   01E3 4E            [ 7]  401 	ld	c, (hl)
   01E4 78            [ 4]  402 	ld	a, b
   01E5 21r5Er00      [10]  403 	ld	hl, #_new_x
   01E8 81            [ 4]  404 	add	a, c
   01E9 77            [ 7]  405 	ld	(hl), a
                            406 ;src/main.c:124: new_y = enemy.y;
   01EA 3Ar22r00      [13]  407 	ld	a,(#_enemy + 1)
   01ED 32r5Fr00      [13]  408 	ld	(#_new_y + 0),a
                            409 ;src/main.c:125: if (!MapIsBlocked (new_x, new_y)) {
   01F0 3Ar5Fr00      [13]  410 	ld	a, (_new_y)
   01F3 F5            [11]  411 	push	af
   01F4 33            [ 6]  412 	inc	sp
   01F5 3Ar5Er00      [13]  413 	ld	a, (_new_x)
   01F8 F5            [11]  414 	push	af
   01F9 33            [ 6]  415 	inc	sp
   01FA CDr00r00      [17]  416 	call	_MapIsBlocked
   01FD F1            [10]  417 	pop	af
                            418 ;src/main.c:132: EntityMove (&enemy, edx[ei++], edy);
   01FE DD 4E FF      [19]  419 	ld	c, -1 (ix)
   0201 0C            [ 4]  420 	inc	c
                            421 ;src/main.c:125: if (!MapIsBlocked (new_x, new_y)) {
   0202 7D            [ 4]  422 	ld	a, l
   0203 B7            [ 4]  423 	or	a, a
   0204 20 6A         [12]  424 	jr	NZ,00116$
                            425 ;src/main.c:126: if (GetBlockingEntity (entities, &target, new_x, new_y) &&
   0206 C5            [11]  426 	push	bc
   0207 3Ar5Fr00      [13]  427 	ld	a, (_new_y)
   020A F5            [11]  428 	push	af
   020B 33            [ 6]  429 	inc	sp
   020C 3Ar5Er00      [13]  430 	ld	a, (_new_x)
   020F F5            [11]  431 	push	af
   0210 33            [ 6]  432 	inc	sp
   0211 21r01r00      [10]  433 	ld	hl, #_target
   0214 E5            [11]  434 	push	hl
   0215 21r47r00      [10]  435 	ld	hl, #_entities
   0218 E5            [11]  436 	push	hl
   0219 CDr00r00      [17]  437 	call	_GetBlockingEntity
   021C F1            [10]  438 	pop	af
   021D F1            [10]  439 	pop	af
   021E F1            [10]  440 	pop	af
   021F C1            [10]  441 	pop	bc
   0220 7D            [ 4]  442 	ld	a, l
   0221 B7            [ 4]  443 	or	a, a
   0222 28 28         [12]  444 	jr	Z,00112$
                            445 ;src/main.c:127: target != &enemy) {
   0224 FD 21r01r00   [14]  446 	ld	iy, #_target
   0228 FD 7E 00      [19]  447 	ld	a, 0 (iy)
   022B D6r21         [ 7]  448 	sub	a, #<(_enemy)
   022D 20 07         [12]  449 	jr	NZ,00190$
   022F FD 7E 01      [19]  450 	ld	a, 1 (iy)
   0232 D6s00         [ 7]  451 	sub	a, #>(_enemy)
   0234 28 16         [12]  452 	jr	Z,00112$
   0236                     453 00190$:
                            454 ;src/main.c:128: EntityAttack (&enemy, target);
   0236 2Ar01r00      [16]  455 	ld	hl, (_target)
   0239 E5            [11]  456 	push	hl
   023A 21r21r00      [10]  457 	ld	hl, #_enemy
   023D E5            [11]  458 	push	hl
   023E CDr00r00      [17]  459 	call	_EntityAttack
   0241 F1            [10]  460 	pop	af
                            461 ;src/main.c:129: EntityPrintStats(&player);
   0242 21r00r00      [10]  462 	ld	hl, #_player
   0245 E3            [19]  463 	ex	(sp),hl
   0246 CDr00r00      [17]  464 	call	_EntityPrintStats
   0249 F1            [10]  465 	pop	af
   024A 18 27         [12]  466 	jr	00117$
   024C                     467 00112$:
                            468 ;src/main.c:132: EntityMove (&enemy, edx[ei++], edy);
   024C DD 5E FF      [19]  469 	ld	e, -1 (ix)
   024F DD 71 FF      [19]  470 	ld	-1 (ix), c
   0252 21r54r00      [10]  471 	ld	hl, #_edx
   0255 16 00         [ 7]  472 	ld	d, #0x00
   0257 19            [11]  473 	add	hl, de
   0258 46            [ 7]  474 	ld	b, (hl)
   0259 11r21r00      [10]  475 	ld	de, #_enemy
   025C 3Ar03r00      [13]  476 	ld	a, (_edy)
   025F F5            [11]  477 	push	af
   0260 33            [ 6]  478 	inc	sp
   0261 C5            [11]  479 	push	bc
   0262 33            [ 6]  480 	inc	sp
   0263 D5            [11]  481 	push	de
   0264 CDr00r00      [17]  482 	call	_EntityMove
   0267 F1            [10]  483 	pop	af
   0268 F1            [10]  484 	pop	af
                            485 ;src/main.c:133: dirty[1] = TRUE;
   0269 21r43r00      [10]  486 	ld	hl, #(_dirty + 0x0001)
   026C 36 01         [10]  487 	ld	(hl), #0x01
   026E 18 03         [12]  488 	jr	00117$
   0270                     489 00116$:
                            490 ;src/main.c:136: else ++ei;
   0270 DD 71 FF      [19]  491 	ld	-1 (ix), c
   0273                     492 00117$:
                            493 ;src/main.c:137: if (ei > 9) ei = 0;
   0273 3E 09         [ 7]  494 	ld	a, #0x09
   0275 DD 96 FF      [19]  495 	sub	a, -1 (ix)
   0278 30 04         [12]  496 	jr	NC,00119$
   027A DD 36 FF 00   [19]  497 	ld	-1 (ix), #0x00
   027E                     498 00119$:
                            499 ;src/main.c:139: state = PLAYER_TURN;
   027E 21r51r00      [10]  500 	ld	hl,#_state + 0
   0281 36 00         [10]  501 	ld	(hl), #0x00
                            502 ;src/main.c:141: } while (1);
   0283 C3r01r01      [10]  503 	jp	00122$
   0286 33            [ 6]  504 	inc	sp
   0287 DD E1         [14]  505 	pop	ix
   0289 C9            [10]  506 	ret
   028A                     507 ___str_0:
   028A 54 68 6F 72 62 61   508 	.ascii "Thorbag"
        67
   0291 00                  509 	.db 0x00
   0292                     510 ___str_1:
   0292 47 6F 62 6C 69 6E   511 	.ascii "Goblin"
   0298 00                  512 	.db 0x00
                            513 	.area _CODE
                            514 	.area _INITIALIZER
   0000                     515 __xinit__action:
   0000 00                  516 	.db #0x00	; 0
   0001                     517 __xinit__target:
   0001 00 00               518 	.dw #0x0000
   0003                     519 __xinit__edy:
   0003 00                  520 	.db #0x00	;  0
                            521 	.area _CABS (ABS)
